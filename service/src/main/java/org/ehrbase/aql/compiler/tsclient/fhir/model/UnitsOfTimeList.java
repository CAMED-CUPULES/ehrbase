//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.02.26 at 01:33:12 PM CET 
//


package org.ehrbase.aql.compiler.tsclient.fhir.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for UnitsOfTime-list.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="UnitsOfTime-list">
 *   &lt;restriction base="{http://hl7.org/fhir}code-primitive">
 *     &lt;enumeration value="s"/>
 *     &lt;enumeration value="min"/>
 *     &lt;enumeration value="h"/>
 *     &lt;enumeration value="d"/>
 *     &lt;enumeration value="wk"/>
 *     &lt;enumeration value="mo"/>
 *     &lt;enumeration value="a"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "UnitsOfTime-list")
@XmlEnum
public enum UnitsOfTimeList {


    /**
     * 秒
     * 
     */
    @XmlEnumValue("s")
    S("s"),

    /**
     * 分钟
     * 
     */
    @XmlEnumValue("min")
    MIN("min"),

    /**
     * 小时
     * 
     */
    @XmlEnumValue("h")
    H("h"),

    /**
     * 天
     * 
     */
    @XmlEnumValue("d")
    D("d"),

    /**
     * 星期
     * 
     */
    @XmlEnumValue("wk")
    WK("wk"),

    /**
     * 月
     * 
     */
    @XmlEnumValue("mo")
    MO("mo"),

    /**
     * 年
     * 
     */
    @XmlEnumValue("a")
    A("a");
    private final java.lang.String value;

    UnitsOfTimeList(java.lang.String v) {
        value = v;
    }

    public java.lang.String value() {
        return value;
    }

    public static UnitsOfTimeList fromValue(java.lang.String v) {
        for (UnitsOfTimeList c: UnitsOfTimeList.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
